@page "/produits"
@inject ProduitPageViewModel ViewModel
@implements IDisposable

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1 class="text-primary">
        <i class="fas fa-box-open me-2"></i>
        Gestion des Produits
    </h1>
    <a href="/produits/ajouter" class="btn btn-primary btn-lg">
        <i class="fas fa-plus me-2"></i>
        Ajouter un produit
    </a>
</div>

<div class="alert alert-info d-flex justify-content-between align-items-center mb-4" role="alert">
    <div>
        <i class="fas fa-info-circle me-2"></i>
        <strong>Astuce :</strong> Vous pouvez gérer vos marques et types de produits depuis la page dédiée.
    </div>
    <a href="/references" class="btn btn-outline-info btn-sm">
        <i class="fas fa-cog me-1"></i>
        Gérer les références
    </a>
</div>

<!-- Section de filtres -->
<div class="filters-section mb-4 p-3 bg-light rounded shadow-sm">
    <div class="row g-3">
        <div class="col-md-4">
            <label for="searchNom" class="form-label fw-bold">
                <i class="fas fa-search me-1"></i>
                Recherche par nom :
            </label>
            <input type="text" id="searchNom" class="form-control" placeholder="Nom du produit..."
                   @bind="ViewModel.SearchNom" @bind:event="oninput" />
        </div>

        <div class="col-md-4">
            <label for="filterType" class="form-label fw-bold">
                <i class="fas fa-tags me-1"></i>
                Filtrer par type :
            </label>
            <select id="filterType" class="form-select" @bind="ViewModel.SelectedType">
                <option value="">-- Tous les types --</option>
                @if (ViewModel.TypesDisponibles != null)
                {
                    @foreach (var type in ViewModel.TypesDisponibles)
                    {
                        <option value="@type.Nom">@type.Nom</option>
                    }
                }
            </select>
        </div>

        <div class="col-md-4">
            <label for="filterMarque" class="form-label fw-bold">
                <i class="fas fa-trademark me-1"></i>
                Filtrer par marque :
            </label>
            <select id="filterMarque" class="form-select" @bind="ViewModel.SelectedMarque">
                <option value="">-- Toutes les marques --</option>
                @if (ViewModel.MarquesDisponibles != null)
                {
                    @foreach (var marque in ViewModel.MarquesDisponibles)
                    {
                        <option value="@marque.Nom">@marque.Nom</option>
                    }
                }
            </select>
        </div>
    </div>

    <div class="row mt-3">
        <div class="col-12 d-flex justify-content-between align-items-center">
            <button class="btn btn-outline-secondary" @onclick="ViewModel.EffacerFiltresAsync">
                <i class="fas fa-eraser me-1"></i>
                Effacer les filtres
            </button>
            <span class="badge bg-info fs-6">
                @ViewModel.ProduitsFiltres?.Count() résultat(s) trouvé(s)
            </span>
        </div>
    </div>
</div>

<!-- Contenu principal -->
@if (ViewModel.Produits == null)
{
    <div class="text-center py-5">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Chargement...</span>
        </div>
        <p class="mt-3 text-muted">Chargement des produits...</p>
    </div>
}
else if (!ViewModel.ProduitsFiltres.Any())
{
    <div class="text-center py-5">
        <i class="fas fa-search fa-4x text-muted mb-3"></i>
        <p class="lead text-muted">Aucun produit trouvé avec ces critères.</p>
    </div>
}
else
{
    <!-- Grille de cartes -->
    <div class="row g-4">
        @foreach (var produit in ViewModel.ProduitsFiltres)
        {
            <div class="col-xl-3 col-lg-4 col-md-6 col-sm-12">
                <div class="card h-100 shadow-sm product-card" @onclick="async () => await ViewModel.VoirDetailsAsync(produit.IdProduit)">

                    <div class="card-header bg-primary text-white position-relative">
                        <h6 class="card-title mb-0 fw-bold">@produit.Nom</h6>

                        @if (produit.EnReappro == true)
                        {
                            <div class="reappro-ribbon">
                                <i class="fas fa-exclamation-triangle"></i>
                                <span>Réappro</span>
                            </div>
                        }
                    </div>

                    <div class="card-body d-flex flex-column">
                        <div class="mb-3">
                            @if (ViewModel.ImagesProduits.ContainsKey(produit.IdProduit) && ViewModel.ImagesProduits[produit.IdProduit].Any())
                            {
                                var firstImage = ViewModel.ImagesProduits[produit.IdProduit].First();
                                <img src="@firstImage.UrlPhoto" alt="@firstImage.NomImage"
                                     class="img-fluid rounded mb-2"
                                     style="height: 150px; width: 100%; object-fit: cover;"
                                     onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';" />
                                <div style="display: none; height: 150px; background-color: #f8f9fa; border-radius: 4px; align-items: center; justify-content: center;">
                                    <i class="fas fa-image fa-3x text-muted"></i>
                                </div>
                            }
                            else
                            {
                                <div class="bg-light rounded d-flex align-items-center justify-content-center mb-2" style="height: 150px;">
                                    <i class="fas fa-image fa-3x text-muted"></i>
                                </div>
                            }
                        </div>

                        <div class="flex-grow-1">
                            <p class="mb-2">
                                <span class="badge bg-secondary me-2">
                                    <i class="fas fa-tags me-1"></i>@produit.Type
                                </span>
                            </p>
                            <p class="mb-0">
                                <span class="badge bg-info">
                                    <i class="fas fa-trademark me-1"></i>@produit.Marque
                                </span>
                            </p>
                        </div>
                    </div>

                    <div class="card-footer bg-transparent d-flex justify-content-between">
                        <button class="btn btn-outline-primary btn-sm" @onclick:stopPropagation="true" @onclick="async () => await ViewModel.VoirDetailsAsync(produit.IdProduit)">
                            <i class="fas fa-eye me-1"></i>
                            Détails
                        </button>
                        <div>
                            <button class="btn btn-outline-warning btn-sm me-1" @onclick:stopPropagation="true" @onclick="async () => await ViewModel.OuvrirModificationAsync(produit.IdProduit)">
                                <i class="fas fa-edit"></i>
                            </button>
                            <button class="btn btn-outline-danger btn-sm" @onclick:stopPropagation="true" @onclick="() => ViewModel.OuvrirSuppression(produit.IdProduit, produit.Nom)">
                                <i class="fas fa-trash"></i>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
}

<!-- Modal de détails -->
@if (ViewModel.ShowDetailModal && ViewModel.ProduitSelectionne != null)
{
    <div class="modal show d-block" tabindex="-1" style="background-color: rgba(0,0,0,0.5);" @onclick="ViewModel.FermerDetailModal">
        <div class="modal-dialog modal-lg" @onclick:stopPropagation="true">
            <div class="modal-content">
                <div class="modal-header bg-primary text-white">
                    <h5 class="modal-title">
                        <i class="fas fa-info-circle me-2"></i>
                        Détails du produit
                    </h5>
                    <button type="button" class="btn-close btn-close-white" @onclick="ViewModel.FermerDetailModal"></button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-6">
                            <h6 class="fw-bold text-primary">Informations générales</h6>
                            <table class="table table-borderless">
                                <tr>
                                    <td class="fw-bold">Nom :</td>
                                    <td>@ViewModel.ProduitSelectionne.Nom</td>
                                </tr>
                                <tr>
                                    <td class="fw-bold">Marque :</td>
                                    <td><span class="badge bg-info">@ViewModel.ProduitSelectionne.Marque</span></td>
                                </tr>
                                <tr>
                                    <td class="fw-bold">Type :</td>
                                    <td><span class="badge bg-secondary">@ViewModel.ProduitSelectionne.Type</span></td>
                                </tr>
                                <tr>
                                    <td class="fw-bold">Stock :</td>
                                    <td>
                                        <span class="badge @(ViewModel.ProduitSelectionne.Stock > ViewModel.ProduitSelectionne.StockMini ? "bg-success" : "bg-danger")">
                                            @(ViewModel.ProduitSelectionne.Stock ?? 0)
                                        </span>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="fw-bold">Stock minimal :</td>
                                    <td>
                                        <span class="badge bg-info">
                                            @(ViewModel.ProduitSelectionne.StockMini ?? 0)
                                        </span>
                                    </td>
                                </tr>
                            </table>
                        </div>
                        <div class="col-md-6">
                            <h6 class="fw-bold text-primary">Images</h6>
                            @if (ViewModel.ImagesProduits.ContainsKey(ViewModel.ProduitSelectionne.IdProduit) && ViewModel.ImagesProduits[ViewModel.ProduitSelectionne.IdProduit].Any())
                            {
                                var images = ViewModel.ImagesProduits[ViewModel.ProduitSelectionne.IdProduit];
                                @if (images.Count > 1)
                                {
                                    <div id="carousel-detail-@ViewModel.ProduitSelectionne.IdProduit" class="carousel slide" data-bs-ride="carousel">
                                        <div class="carousel-indicators">
                                            @for (int i = 0; i < images.Count; i++)
                                            {
                                                <button type="button" data-bs-target="#carousel-detail-@ViewModel.ProduitSelectionne.IdProduit" data-bs-slide-to="@i"
                                                        class="@(i == 0 ? "active" : "")" aria-current="@(i == 0 ? "true" : "false")"></button>
                                            }
                                        </div>
                                        <div class="carousel-inner rounded">
                                            @for (int i = 0; i < images.Count; i++)
                                            {
                                                var image = images[i];
                                                <div class="carousel-item @(i == 0 ? "active" : "")">
                                                    <div style="height: 250px; display: flex; justify-content: center; align-items: center;">
                                                        <img src="@image.UrlPhoto" alt="@image.NomImage"
                                                             style="max-height: 100%; max-width: 100%; object-fit: contain;" />
                                                    </div>
                                                    <div class="text-center mt-2">
                                                        <p class="mb-0 small" style="background-color: rgba(0,0,0,0.6); color: white; display: inline-block; padding: 5px 10px; border-radius: 5px;">
                                                            @image.NomImage
                                                        </p>
                                                    </div>
                                                </div>
                                            }
                                        </div>
                                        <button class="carousel-control-prev" type="button" data-bs-target="#carousel-detail-@ViewModel.ProduitSelectionne.IdProduit" data-bs-slide="prev">
                                            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                            <span class="visually-hidden">Précédent</span>
                                        </button>
                                        <button class="carousel-control-next" type="button" data-bs-target="#carousel-detail-@ViewModel.ProduitSelectionne.IdProduit" data-bs-slide="next">
                                            <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                            <span class="visually-hidden">Suivant</span>
                                        </button>
                                    </div>
                                }
                                else
                                {
                                    <div class="row g-2">
                                        @foreach (var image in images)
                                        {
                                            <div class="col-12">
                                                <img src="@image.UrlPhoto" alt="@image.NomImage" class="img-fluid rounded" style="height: 250px; object-fit: cover; width: 100%;" />
                                                <small class="text-muted d-block text-center">@image.NomImage</small>
                                            </div>
                                        }
                                    </div>
                                }
                            }
                            else
                            {
                                <p class="text-muted">Aucune image disponible</p>
                            }
                        </div>
                    </div>
                    @if (!string.IsNullOrEmpty(ViewModel.ProduitSelectionne.Description))
                    {
                        <hr>
                        <h6 class="fw-bold text-primary">Description</h6>
                        <p>@ViewModel.ProduitSelectionne.Description</p>
                    }
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-warning" @onclick="async () => await ViewModel.OuvrirModificationAsync(ViewModel.ProduitSelectionne.IdProduit)">
                        <i class="fas fa-edit me-2"></i>
                        Modifier
                    </button>
                    <button type="button" class="btn btn-secondary" @onclick="ViewModel.FermerDetailModal">Fermer</button>
                </div>
            </div>
        </div>
    </div>
}

<!-- Modal de modification -->
@if (ViewModel.ShowEditModal && ViewModel.ProduitAModifier != null)
{
    <div class="modal show d-block" tabindex="-1" style="background-color: rgba(0,0,0,0.5);" @onclick="ViewModel.FermerEditModal">
        <div class="modal-dialog modal-xl" @onclick:stopPropagation="true">
            <div class="modal-content">
                <div class="modal-header bg-warning text-dark">
                    <h5 class="modal-title">
                        <i class="fas fa-edit me-2"></i>
                        Modifier le produit
                    </h5>
                    <button type="button" class="btn-close" @onclick="ViewModel.FermerEditModal"></button>
                </div>
                <div class="modal-body">
                    @if (!string.IsNullOrEmpty(ViewModel.ErrorMessageEdit))
                    {
                        <div class="alert alert-danger" role="alert">
                            <i class="fas fa-exclamation-triangle me-2"></i>
                            @ViewModel.ErrorMessageEdit
                        </div>
                    }

                    <EditForm Model="@ViewModel.ProduitAModifier" OnValidSubmit="@ViewModel.ConfirmerModificationAsync">
                        <DataAnnotationsValidator />
                        <ValidationSummary class="text-danger mb-3" />

                        <div class="row">
                            <!-- Colonne de gauche : Informations du produit -->
                            <div class="col-md-6">
                                <h6 class="fw-bold text-warning mb-3">
                                    <i class="fas fa-info-circle me-2"></i>
                                    Informations du produit
                                </h6>

                                <div class="row g-3">
                                    <div class="col-12">
                                        <label for="editNom" class="form-label fw-bold">
                                            Nom du produit <span class="text-danger">*</span>
                                        </label>
                                        <InputText id="editNom" class="form-control" @bind-Value="ViewModel.ProduitAModifier.Nom" />
                                        <ValidationMessage For="@(() => ViewModel.ProduitAModifier.Nom)" />
                                    </div>

                                    <div class="col-12">
                                        <label for="editMarque" class="form-label fw-bold">
                                            Marque <span class="text-danger">*</span>
                                        </label>
                                        <select id="editMarque" class="form-select" @bind="ViewModel.ProduitAModifier.Marque">
                                            <option value="">-- Sélectionnez une marque --</option>
                                            @if (ViewModel.MarquesDisponibles != null)
                                            {
                                                @foreach (var marque in ViewModel.MarquesDisponibles)
                                                {
                                                    <option value="@marque.Nom">@marque.Nom</option>
                                                }
                                            }
                                        </select>
                                        <ValidationMessage For="@(() => ViewModel.ProduitAModifier.Marque)" />
                                    </div>

                                    <div class="col-12">
                                        <label for="editType" class="form-label fw-bold">
                                            Type de produit <span class="text-danger">*</span>
                                        </label>
                                        <select id="editType" class="form-select" @bind="ViewModel.ProduitAModifier.Type">
                                            <option value="">-- Sélectionnez un type --</option>
                                            @if (ViewModel.TypesDisponibles != null)
                                            {
                                                @foreach (var type in ViewModel.TypesDisponibles)
                                                {
                                                    <option value="@type.Nom">@type.Nom</option>
                                                }
                                            }
                                        </select>
                                        <ValidationMessage For="@(() => ViewModel.ProduitAModifier.Type)" />
                                    </div>

                                    <div class="col-12">
                                        <label for="editStock" class="form-label fw-bold">Stock actuel</label>
                                        <InputNumber id="editStock" class="form-control" @bind-Value="ViewModel.ProduitAModifier.Stock" />
                                        <ValidationMessage For="@(() => ViewModel.ProduitAModifier.Stock)" />
                                    </div>

                                    <div class="col-12">
                                        <label for="editDescription" class="form-label fw-bold">Description</label>
                                        <InputTextArea id="editDescription" class="form-control" rows="3" @bind-Value="ViewModel.ProduitAModifier.Description" />
                                        <ValidationMessage For="@(() => ViewModel.ProduitAModifier.Description)" />
                                    </div>
                                </div>
                            </div>

                            <!-- Colonne de droite : Gestion des images -->
                            <div class="col-md-6">
                                <h6 class="fw-bold text-warning mb-3">
                                    <i class="fas fa-images me-2"></i>
                                    Gestion des images
                                </h6>

                                <!-- Ajouter une nouvelle image -->
                                <div class="card mb-3">
                                    <div class="card-body">
                                        <h6 class="card-title">Ajouter une image</h6>
                                        <div class="mb-2">
                                            <label for="editNomImage" class="form-label">Nom de l'image</label>
                                            <input type="text" id="editNomImage" class="form-control" @bind="ViewModel.NouvelleImageNom" placeholder="Ex: Photo principale" />
                                        </div>
                                        <div class="mb-2">
                                            <label for="editUrlImage" class="form-label">URL de l'image</label>
                                            <input type="text" id="editUrlImage" class="form-control" @bind="ViewModel.NouvelleImageUrl" placeholder="https://..." />
                                        </div>
                                        <button type="button" class="btn btn-sm btn-success w-100" @onclick="ViewModel.AjouterImageTemporaire">
                                            <i class="fas fa-plus me-1"></i>
                                            Ajouter l'image
                                        </button>
                                    </div>
                                </div>

                                <!-- Liste des images existantes et nouvelles -->
                                <div class="card">
                                    <div class="card-body" style="max-height: 400px; overflow-y: auto;">
                                        <h6 class="card-title">Images du produit</h6>

                                        @if (ViewModel.ImagesModification.Any())
                                        {
                                            <div class="row g-2">
                                                @foreach (var img in ViewModel.ImagesModification)
                                                {
                                                    <div class="col-12">
                                                        <div class="card">
                                                            <div class="row g-0">
                                                                <div class="col-4">
                                                                    <img src="@img.UrlPhoto" alt="@img.NomImage"
                                                                         class="img-fluid rounded-start"
                                                                         style="height: 100px; object-fit: cover; width: 100%;"
                                                                         onerror="this.src='data:image/svg+xml,%3Csvg xmlns=\'http://www.w3.org/2000/svg\' width=\'100\' height=\'100\'%3E%3Crect fill=\'%23f0f0f0\' width=\'100\' height=\'100\'/%3E%3Ctext x=\'50%25\' y=\'50%25\' text-anchor=\'middle\' dy=\'.3em\' fill=\'%23999\'%3EImage%3C/text%3E%3C/svg%3E';" />
                                                                </div>
                                                                <div class="col-8">
                                                                    <div class="card-body p-2">
                                                                        <p class="card-text mb-1">
                                                                            <strong>@img.NomImage</strong>
                                                                            @if (img.IdImage == 0)
                                                                            {
                                                                                <span class="badge bg-success ms-1">Nouvelle</span>
                                                                            }
                                                                        </p>
                                                                        <small class="text-muted d-block text-truncate">@img.UrlPhoto</small>
                                                                        <button type="button" class="btn btn-sm btn-danger mt-2" @onclick="() => ViewModel.SupprimerImageModification(img)">
                                                                            <i class="fas fa-trash me-1"></i>
                                                                            Supprimer
                                                                        </button>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                }
                                            </div>
                                        }
                                        else
                                        {
                                            <p class="text-muted text-center">Aucune image pour ce produit</p>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" @onclick="ViewModel.FermerEditModal">Annuler</button>
                            <button type="submit" class="btn btn-warning" disabled="@ViewModel.IsSubmittingEdit">
                                @if (ViewModel.IsSubmittingEdit)
                                {
                                    <span class="spinner-border spinner-border-sm me-2" role="status"></span>
                                }
                                else
                                {
                                    <i class="fas fa-save me-2"></i>
                                }
                                @(ViewModel.IsSubmittingEdit ? "Modification..." : "Sauvegarder")
                            </button>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
}

<!-- Modal de confirmation de suppression -->
@if (ViewModel.ShowDeleteModal && ViewModel.ProduitASupprimer != null)
{
    <div class="modal show d-block" tabindex="-1" style="background-color: rgba(0,0,0,0.5);" @onclick="ViewModel.FermerDeleteModal">
        <div class="modal-dialog" @onclick:stopPropagation="true">
            <div class="modal-content">
                <div class="modal-header bg-danger text-white">
                    <h5 class="modal-title">
                        <i class="fas fa-exclamation-triangle me-2"></i>
                        Confirmer la suppression
                    </h5>
                    <button type="button" class="btn-close btn-close-white" @onclick="ViewModel.FermerDeleteModal"></button>
                </div>
                <div class="modal-body">
                    <div class="text-center">
                        <i class="fas fa-trash-alt fa-4x text-danger mb-3"></i>
                        <p class="lead">Êtes-vous sûr de vouloir supprimer le produit :</p>
                        <p class="fw-bold fs-5 text-danger">"@ViewModel.NomProduitASupprimer"</p>
                        <p class="text-muted">Cette action est irréversible.</p>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" @onclick="ViewModel.FermerDeleteModal">Annuler</button>
                    <button type="button" class="btn btn-danger" @onclick="ViewModel.ConfirmerSuppressionAsync" disabled="@ViewModel.IsSubmittingDelete">
                        @if (ViewModel.IsSubmittingDelete)
                        {
                            <span class="spinner-border spinner-border-sm me-2" role="status"></span>
                        }
                        else
                        {
                            <i class="fas fa-trash me-2"></i>
                        }
                        @(ViewModel.IsSubmittingDelete ? "Suppression..." : "Supprimer définitivement")
                    </button>
                </div>
            </div>
        </div>
    </div>
}

<style>
    .product-card {
        cursor: pointer;
        transition: transform 0.2s ease, box-shadow 0.2s ease;
    }

        .product-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.15) !important;
        }

    .filters-section {
        background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
        border: 1px solid #dee2e6;
    }

    .carousel-control-prev-icon,
    .carousel-control-next-icon {
        background-color: rgba(0, 0, 0, 0.5);
        border-radius: 50%;
        padding: 10px;
    }

    .carousel-indicators button {
        width: 8px;
        height: 8px;
        border-radius: 50%;
        background-color: rgba(255, 255, 255, 0.7);
    }

        .carousel-indicators button.active {
            background-color: #fff;
        }

    .reappro-ribbon {
        position: absolute;
        right: -5px;
        top: -5px;
        background-color: #dc3545;
        color: white;
        padding: 2px 8px;
        font-size: 0.75rem;
        border-radius: 3px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.2);
    }
</style>

@code {
    protected override async Task OnInitializedAsync()
    {
        await ViewModel.InitialiserAsync();
        ViewModel.PropertyChanged += OnViewModelPropertyChanged;
    }

    private void OnViewModelPropertyChanged(object? sender, System.ComponentModel.PropertyChangedEventArgs e)
    {
        InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        ViewModel.PropertyChanged -= OnViewModelPropertyChanged;
    }
}